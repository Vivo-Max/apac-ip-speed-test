```yaml
name: Proxy IP Check

permissions:
  contents: write  # 需要写权限以推送文件

on:
  push:
    branches:
      - main
    paths:
      - 'input.csv'
      - 'iptest'
      - 'iptest.sh'
  pull_request:
    branches:
      - main
    paths:
      - 'input.csv'
      - 'iptest'
      - 'iptest.sh'
  schedule:
    - cron: '0 0 * * 1'  # 每周一 UTC 时间 00:00 运行
  workflow_dispatch:

jobs:
  proxy-ip-check:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # 设置作业超时为 30 分钟
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests charset-normalizer geoip2==4.8.0 maxminddb>=2.0.0 packaging>=21.3

      - name: Prepare iptest.sh and iptest
        run: |
          echo "Checking for iptest.sh..."
          if [ -f iptest.sh ]; then
            echo "Found existing iptest.sh:"
            cat iptest.sh
            grep -q "iptest" iptest.sh && echo "iptest.sh references iptest binary" || echo "Warning: iptest.sh may not reference iptest"
          else
            echo "No iptest.sh, creating a minimal version"
            cat << 'EOF' > iptest.sh
#!/bin/bash
while IFS=' ' read -r ip port; do
    echo "Testing $ip:$port"
    stdbuf -oL ./iptest -c "$ip" -p "$port"
done < ip.txt
EOF
            echo "Created iptest.sh with default iptest invocation using stdbuf"
          fi
          chmod +x iptest.sh
          echo "Checking for iptest..."
          if [ -f iptest ]; then
            chmod +x iptest
            echo "iptest binary found"
            ./iptest --version || echo "iptest version check failed, assuming it works"
          else
            echo "iptest binary not found"
            echo "Error: iptest binary is required for iptest.sh"
            exit 1
          fi

      - name: Run IP test and process results
        env:
          REAL_TIME_LOG: "true"  # 启用逐行打印，便于调试
          PYTHONUNBUFFERED: "1"  # 强制 Python 无缓冲输出
        run: |
          echo "Start time: $(date)"
          echo "开始时间: $(date)"
          python3 ip-filter-speedtest-api-1769.py || echo "Python script failed"
          echo "End time: $(date)"
          echo "结束时间: $(date)"

      - name: Verify generated files
        run: |
          ls -l ip.txt ip.csv ips.txt speedtest.log || echo "Some files missing"
          cat speedtest.log || echo "speedtest.log not generated"

      - name: Commit and push generated files
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add ip.txt ip.csv ips.txt speedtest.log || true
          git commit -m "Update generated files from proxy IP check" || echo "No changes to commit"
          git push || echo "No changes to push"
```
